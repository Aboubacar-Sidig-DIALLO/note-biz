// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

// NOTE: Les champs DateTime utilisent UTC par défaut
// Pour obtenir l'heure française, utilisez une fonction de conversion côté application

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id    String @id @default(cuid())
  email String @unique
  name  String?
  pin   String @unique
  
  // Relations avec les modèles de données
  changes         Changes[]
  changesHistory  ChangesHistory[]
  credits         credits[]
  creditsHistory  creditsHistory[]
  investments     Investments[]
  investmentsHistory InvestmentsHistory[]
  guineeCredits   GuineeCredits[]
  guineeCreditsHistory GuineeCreditsHistory[]
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// Monnaie
model Changes {
  id        String   @id @default(cuid())
  name      String
  value     Float    @default(0) 
  userId    String   // Référence vers l'utilisateur
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  @@index([userId])
}

// Historique des monnaies
model ChangesHistory {
  id        String   @id @default(cuid())
  name      String
  value     Float    @default(0) 
  userId    String   // Référence vers l'utilisateur
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  
  @@index([userId])
}

// Avoir
model credits {
  id        String   @id @default(cuid())
  name      String
  value     Float    @default(0) 
  userId    String   // Référence vers l'utilisateur
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  @@index([userId])
}

// Historique des avoirs
model creditsHistory {
  id        String   @id @default(cuid())
  name      String
  value     Float    @default(0) 
  userId    String   // Référence vers l'utilisateur
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  
  @@index([userId])
}

// Investissement
model Investments {
  id        String   @id @default(cuid())
  name      String 
  value     Int      @default(0)
  userId    String   // Référence vers l'utilisateur
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  @@index([userId])
}

// Historique des investissements
model InvestmentsHistory {
  id        String   @id @default(cuid())
  name      String 
  value     Int      @default(0)
  userId    String   // Référence vers l'utilisateur
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  
  @@index([userId])
}

// Avoir en guinée
model GuineeCredits {
  id        String   @id @default(cuid())
  name      String
  value     Int      @default(0)
  userId    String   // Référence vers l'utilisateur
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  @@index([userId])
}

// Historique des avoirs en guinée
model GuineeCreditsHistory {
  id        String   @id @default(cuid())
  name      String
  value     Int      @default(0)
  userId    String   // Référence vers l'utilisateur
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  
  @@index([userId])
}
